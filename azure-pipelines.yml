# Build and push image to Azure Container Registry;
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
      - master
      - stage
  tags:
    include:
      - "*"
  paths:
    exclude:
      - README.md
variables:
  # Container registry service connection established during pipeline creation
  # Master variables
  containerRegistryGeneric: cameritegeneric-4966

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Tests
    displayName: Run tests
    jobs:
      - job: RunTests
        displayName: Install dependencies and run tests
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: "Install Node.js"

          - task: CmdLine@2
            displayName: Installing dependencies
            inputs:
              script: |
                npm install

          - task: CmdLine@2
            displayName: Linter Validation
            inputs:
              script: |
                npm run eslint

          - task: CmdLine@2
            displayName: Build app
            inputs:
              script: |
                npm run build

          - task: CmdLine@2
            displayName: Run tests
            inputs:
              script: |
                npm run devops_coverage

          - task: CmdLine@2
            condition: succeededOrFailed()
            displayName: Generate Cobertura Report
            inputs:
              script: |
                npm run generate_cobertura

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "$(System.DefaultWorkingDirectory)/**/test-results.xml"
              testRunTitle: Publish test results for NodeJS

          - task: PublishCodeCoverageResults@1
            condition: succeededOrFailed()
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: $(System.DefaultWorkingDirectory)/**/coverage/cobertura-coverage.xml
              reportDirectory: $(System.DefaultWorkingDirectory)/**/coverage
              failIfCoverageEmpty: true

  - stage: DockerBuildAndPushMaster
    dependsOn:
      - Tests
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Docker build and push Master
    jobs:
      - job: BuildAndPush
        displayName: Docker build and push Master
        steps:
          - checkout: self

          - task: NodeTool@0
            inputs:
              versionSpec: "16.x"
            displayName: "Install Node.js"

          - task: CmdLine@2
            displayName: Installing dependencies
            inputs:
              script: |
                npm install

          - task: CmdLine@2
            displayName: Build app
            inputs:
              script: |
                npm run build

          - task: Docker@2
            inputs:
              containerRegistry: $(containerRegistryGeneric)
              command: "login"

          - task: Docker@2
            displayName: Docker Build
            inputs:
              command: "build"
              containerRegistry: $(containerRegistryGeneric)
              repository: ntechlab-mock
              buildContext: $(Build.SourcesDirectory)
              Dockerfile: Dockerfile
              tags: |
                latest

          - task: Docker@2
            displayName: Docker Push
            inputs:
              command: "push"
              containerRegistry: $(containerRegistryGeneric)
              repository: ntechlab-mock
              tags: |
                latest
